name: Auto Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current version and calculate next version
        id: version
        run: |
          # Get current version from CMakeLists.txt
          CURRENT_VERSION=$(grep -oP 'VERSION \K[0-9]+\.[0-9]+\.[0-9]+' CMakeLists.txt | head -1)
          echo "Current version in CMakeLists.txt: $CURRENT_VERSION"

          # Get latest tag
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          LATEST_VERSION=${LATEST_TAG#v}
          echo "Latest git tag: $LATEST_TAG ($LATEST_VERSION)"

          # Parse current version
          IFS='.' read -r -a VERSION_PARTS <<< "$CURRENT_VERSION"
          MAJOR="${VERSION_PARTS[0]}"
          MINOR="${VERSION_PARTS[1]}"
          PATCH="${VERSION_PARTS[2]}"

          # Auto-increment patch version
          PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"

          echo "New version: $NEW_VERSION"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "prev_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Update version in CMakeLists.txt
        run: |
          sed -i "s/VERSION [0-9]\+\.[0-9]\+\.[0-9]\+/VERSION ${{ steps.version.outputs.version }}/" CMakeLists.txt
          echo "Updated CMakeLists.txt to version ${{ steps.version.outputs.version }}"

      - name: Generate release notes
        id: notes
        run: |
          PREV_TAG="${{ steps.version.outputs.prev_tag }}"

          if [ "$PREV_TAG" = "v0.0.0" ]; then
            # First release - get all commits
            COMMITS=$(git log --pretty=format:"- %s (%h)" --reverse)
          else
            # Get commits since last tag
            COMMITS=$(git log ${PREV_TAG}..HEAD --pretty=format:"- %s (%h)" --reverse)
          fi

          # Create release notes
          cat > release_notes.md <<EOF
          ## What's Changed

          $COMMITS

          ---

          **Full Changelog**: https://github.com/${{ github.repository }}/compare/${PREV_TAG}...v${{ steps.version.outputs.version }}
          EOF

          echo "Generated release notes:"
          cat release_notes.md

      - name: Commit version bump
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add CMakeLists.txt
          git commit -m "chore: bump version to ${{ steps.version.outputs.version }}"
          git push origin main

      - name: Create and push tag
        run: |
          git tag -a "v${{ steps.version.outputs.version }}" -m "Release v${{ steps.version.outputs.version }}"
          git push origin "v${{ steps.version.outputs.version }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
